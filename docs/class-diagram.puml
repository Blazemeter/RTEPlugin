@startuml

skinparam monochrome true
hide empty members

package org.apache.jmeter.* {
     abstract class AbstractConfigGui
 
     abstract class AbstractSamplerGui
 
     abstract class AbstractSampler
     
     class GenericController
 }
             
package com.blazemeter.jmeter.rte {
    
     package sampler {
        class RteConfigGui extends AbstractConfigGui {
        }
        RteSamplerGui ..> RteSampler
    
        class RteSamplerGui extends AbstractSamplerGui {
        }
        RteConfigGui ..> RteSampler
    
        class RteSampler extends AbstractSampler {
            boolean disconnect
        }
      }
      
    package core {
        RteSampler --> RteProtocolClient
        interface RteProtocolClient {
            void connect(String server, int port, SSLType sslType, TerminalType terminalType, long timeOutMillis, long StableTimeOut)
            String send(List<Input> input, List<WaitCondition> waiters)
            void disconnect()
        }
        enum SecurityProtocol {
            TLS
            SSLv2
            SSLv3
        }

        abstract class Input{
            String input
        }
        
        class CoordInput extends Input{
            Position position
        }
        
        class LabelInput extends Input{
            String label
        }
        
        class TabulatorInput extends Input{
            int offset
        }
        
        class Position {
            int row
            int column
        }

        class Area {
            Position topLeft
            Position bottomRight
        }

        class WaitCondition {
            long timeoutMs
            long stableForMs
        }

        class SyncWaitCondition extends WaitCondition

        class CursorWaitCondition extends WaitCondition {
            Position position
        }

        class SilentWaitCondition extends WaitCondition

        class TextWaitCondition extends WaitCondition {
            Area searchArea
            String regex
        }

        package listener {
            abstract class ConditionWaiter{
            }
            abstract class RequestListener{
            }
            interface TerminalStateListener{
                void onTerminalStateChange()
            }
        }

    }
    
    package protocols {
        package tn5250 {
            package tn5250.listeners {
                class Tn5250RequestListener extends RequestListener
                
                abstract class Tn5250ConditionWaiter extends ConditionWaiter
                
            }
            
            class Tn5250Client implements RteProtocolClient {
            }
            
        }

        package tn3270 {
            package tn3270.listeners {
                class Tn3270RequestListener extends RequestListener
                abstract class Tn3270ConditionWaiter extends ConditionWaiter
            }
            
            class Tn3270Client implements RteProtocolClient {
            }
        }
        
    }

    package recorder { 
        package wait {
                    abstract class WaitConditionRecorder implements RecordingStateListener {
                    long maxStablePeriod
                    long stablePeriodThresholdMillis
                    }
                    
                    class SyncWaitRecorder extends WaitConditionRecorder{
                    long stablePeriodMillis
                    } 
                    
                    class SilentWaitRecorder extends WaitConditionRecorder
                    
                    class WaitConditionsRecorder{
                    long stablePeriodMillis
                    }
                    
                    class TextWaitRecorder extends WaitConditionRecorder{
                    long stablePeriodMillis
                    long timestampWaitForText
                    Duque<Screenshot> screenshots
                    
                    }
                    WaitConditionsRecorder "1" --> "1" SyncWaitRecorder 
                    WaitConditionsRecorder "1" --> "1" SilentWaitRecorder 
                     
                    } 
                    
        package emulator {
           class Xtn5250TerminalEmulator implements TerminalEmulator
           
           interface TerminalEmulator{
           void start()
           void stop()
           void setCursor(int row, int col)
           void setScreenSize(int columns, int rows)
           void setKeyboardLock(boolean lock)
           void soundAlarm()
           void setScreen(Screen screen)
           void addTerminalEmulatorListener(TerminalEmulatorListener terminalEmulatorListener)
           }
           
           interface TerminalEmulatorListener{
           void onCloseTerminal()
           void onAttentionKey(AttentionKey attentionKey, List<Input> inputs)
           }
  
          }
       
       interface RecordingStateListener{
           void onRecordingStart()
           void onRecordingStop()
           void onRecordingException(Exception e)
           }
           
           class RTERecorder extends GenericController implements TerminalEmulatorListener, RecordingStateListener, TerminalStateListener
                   
           class RTERecorderGui implements RecordingStateListener
           
           class RTETemplateRepository
    }
 
       RecordingStateListener "1" <-- "1" RTERecorder
       RTERecorderGui "1" ..> "1" RTETemplateRepository 
       RTERecorderGui "1" --> "1" RTERecorder
       RTERecorder "0..1" --> "0..1" RteSampler
       RTERecorder "0..1" --> "0..1" TerminalEmulator
       RTERecorder "1" <-- "1" WaitConditionsRecorder
      
@enduml